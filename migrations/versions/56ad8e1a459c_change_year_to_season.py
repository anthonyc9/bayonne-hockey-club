"""Change year to season

Revision ID: 56ad8e1a459c
Revises: 
Create Date: 2025-01-27 19:44:48.608398

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '56ad8e1a459c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    
    # Check if season column already exists
    inspector = sa.inspect(connection)
    columns = [col['name'] for col in inspector.get_columns('player')]
    
    with op.batch_alter_table('player', schema=None) as batch_op:
        if 'season' not in columns:
            batch_op.add_column(sa.Column('season', sa.Integer(), nullable=True))
        if 'year' in columns:
            batch_op.drop_column('year')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    
    # Check if year column already exists
    inspector = sa.inspect(connection)
    columns = [col['name'] for col in inspector.get_columns('player')]
    
    with op.batch_alter_table('player', schema=None) as batch_op:
        if 'year' not in columns:
            batch_op.add_column(sa.Column('year', sa.INTEGER(), nullable=True))
        if 'season' in columns:
            batch_op.drop_column('season')

    # ### end Alembic commands ###
